package JDBC;

import java.awt.BorderLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.event.MenuEvent;
import javax.swing.filechooser.FileFilter;

public class BlobTest {
	JFrame jf = new JFrame("圖片管理程式");
	private static Connection conn;
	private static PreparedStatement insert;
	private static PreparedStatement query;
	private static PreparedStatement queryAll;
	//定義一個DefaultListModel物件
	private DefaultListModel<ImageHolder> imageModel
			= new DefaultListModel<>();
	//初始化JFrame元件
	private JList<ImageHolder> imageList = new JList<>(imageModel);
	private JTextField filePath = new JTextField(26);
	private JButton browserBn = new JButton("...");
	private JButton uploadBn = new JButton("上傳");
	private JLabel imageLable = new JLabel();
	//使用現在路徑建立檔案選擇器
	JFileChooser chooser = new JFileChooser(".");
	//建立檔案過濾器
	ExtensionFileFilter filter = new ExtensionFileFilter();
	
	static{
		try{
			ConnMySQL login = new ConnMySQL();
			Class.forName(login.driver);
			conn = DriverManager.getConnection(login.url, login.user, login.pass);
			insert = conn.prepareStatement("insert into image_table"
					+ "values(null,?,?)" ,Statement.RETURN_GENERATED_KEYS);
			query = conn.prepareStatement("select img_data from img_table"
					+ "where img_id=?");
			queryAll = conn.prepareStatement("select img_id, "
					+ " img_name from img_table");
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	public void init()throws SQLException{
		//------初始化檔案選擇器------
		filter.addExtensions("jpg");
		filter.addExtensions("jpeg");
		filter.addExtensions("gif");
		filter.addExtensions("png");
		filter.setDescription("圖片檔(*.jpg,*.jpeg,*.gif,*.png)");
		//禁止檔案類型，false代表不限制
		chooser.setAcceptAllFileFilterUsed(false);
		//------初始化程式介面------
		fillListMode();
		filePath.setEditable(false);
		//只能單選
		imageList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		JPanel jp = new JPanel();
		jp.add(filePath);
		jp.add(browserBn);
		browserBn.addActionListener(even->{
			//顯示檔案對話方塊
			int result = chooser.showDialog(jf, "瀏覽圖片檔上傳");
			//如果使用者選擇了APPROVE按鈕，即開啟，儲存等按鈕
			if(result == JFileChooser.APPROVE_OPTION){
				filePath.setText(chooser.getSelectedFile().getPath());
			}
		});
		jp.add(uploadBn);
		uploadBn.addActionListener(avt->{
			//如果上傳檔案的文字方塊有內容
			if(filePath.getText().trim().length() > 0){
				//將指定檔案存放到資料庫
				upload(filePath.getText());
				//清空文字方塊內容
				filePath.setText("");
			}
		});
		JPanel left = new JPanel();
		left.setLayout(new BorderLayout());
		left.add(new JScrollPane(imageLable), BorderLayout.CENTER);
		left.add(jp, BorderLayout.SOUTH);
		jf.add(left);
		imageList.setFixedCellWidth(160);
		jf.add(new JScrollPane(imageList), BorderLayout.EAST);
		imageList.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent e){
				//如果滑鼠雙擊
				if(e.getClickCount()>=2){
					//取出選取的List項目
					ImageHolder cur = (ImageHolder)imageList.getSelectedValue();
					try{
						//顯示選取項目的List項目
						showImage(cur.getId());
					}catch(SQLException sqle){
						sqle.printStackTrace();
					}
				}
			}
		});
		jf.setSize(620, 400);
		jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		jf.setVisible(true);
	}
	//-----尋找img_table填充ListModel-----
	public void fillListMode()throws SQLException{
		try(ResultSet rs = queryAll.executeQuery()){
			//清除所有元素
			imageModel.clear();
			//把查詢的全部記錄添加到ListModel中
			while(rs.next()){
				imageModel.addElement(new ImageHolder(rs.getInt(1),rs.getString(2)));
			}
		}
	}
	//------將指定圖片放入資料庫------
	public void upload(String fileName){
		//擷取檔名
		String imageName = fileName.substring(fileName.lastIndexOf('\\')
				+ 1 , fileName.lastIndexOf('.'));
		File f = new File(fileName);
		try(InputStream is = new FileInputStream(f)){
			//設置圖片名參數
			insert.setString(1, imageName);
			//設置二進位串流參數
			insert.setBinaryStream(2, is, (int)f.length());
			int affect = insert.executeUpdate();
			if(affect == 1){
				//重新更新ListModel，將會讓JList顯示最新的圖片列表
				fillListMode();
			}
		} catch (Exception e) {
			e.printStackTrace();
		} 
	}
	
	class ExtensionFileFilter extends FileFilter{
		private String description = "";
		private ArrayList<String> extensions = new ArrayList<>();
		//自訂方法，添加檔案附檔名
		public void addExtensions(String extension){
			if(!extension.startsWith(".")){
				extension = "." + extension;
				extensions.add(extension.toLowerCase());
			}
		}
		//過濾檔案過濾器的描述文字
		public void setDescription(String aDescription) {
			description = aDescription;
		}
		@Override
		public String getDescription(){
			return description;
		}
		@Override
		public boolean accept(File f) {
			if(f.isDirectory()) return true;
			String name = f.getName().toLowerCase();
			for(String extrnsion : extensions){
				if(name.endsWith(extrnsion)){
					return true;
				}
			}
			return false;
		}
	}
	
	class ImageHolder{
		//封裝圖片的ID
		private int id;
		//封裝圖片的名字
		private String name;
		public ImageHolder(){};
		public ImageHolder(int id, String name){
			this.id = id;
			this.name = name;
		}
		//id的setter和getter方法
		public void setId(int id){
			this.id = id;
		}
		public int getId(int id){
			return this.id;
		}
		//name的setter和getter方法
		public void setName(String name){
			this.name = name;
		}
		public String getName(String name){
			return this.name;
		}
		//覆寫toString()方法，返回圖片名稱
		public String toString(){
			return name;
		}
	}
}
